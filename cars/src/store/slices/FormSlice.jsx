import { createSlice } from "@reduxjs/toolkit";
import { addCar } from "./CarsSlice";

const formSlice = createSlice({
  name: "form",
  initialState: {
    name: "",
    cost: 0,
  },
  reducers: {
    changeName(state, action) {
      state.name = action.payload;
      console.log(state.name);
    },
    changeCost(state, action) {
      state.cost = action.payload;
      console.log(state.cost);
    },
  },
  // automatically generated reducer function for each action type generated by createSlice
  // The argument to extraReducers is a builder function that lets you add reducers to the slice
  // The builder function accepts an object with keys that match the action type names and values that are
  // functions that will be called when the corresponding action is dispatched.
  extraReducers(builder) {
    builder.addCase(addCar, (state, action) => {
      (state.name = ""), (state.cost = 0);
    });
  },
});

// This export the mini-reducer
export const { changeName, changeCost } = formSlice.actions;

// This exports the complete reducer (combined reducer)
export const formReducer = formSlice.reducer;
